import math

SYMBOLS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890 !?.,'

def main():
    ciphertext = '245_168_11684548120768779947659938154617191683729845023501700470836494411184745388284192333723533486544749399218380227698810498818697016865155496866743535720941682147043533753070302252880414830187162609538941360234452266049425477028523263852927812029587815049779596204059509974898735694750475646239722542062765257530247414476210318392466555839557570889231373966171113396941981536881159573267101002975001031812338422725357826431571390138943698925185135874151392088260883260783043473868134098170936860886529487226941792116226522827583017779077326285808281555006377313789242189663982911875462100172492690277312153804944059141746,7987051270233076540085306266927977973008340225692514030311105321716786087563705485229076401336980536612784934399776240521732931387092632015703443222969776259825226674664202180863430570776543395516237810148372599564895126297724017985944237577040527910748161544634165896430576455916207391217708048816657724936963853733100812188640208080655301383020579026416456925943038325376318328177016308992857467284226639718845006115947481414418402280194104753689665532879260018359028671843766199074982923113852610919695695219013656607033996780602412556247915460270236935783268934129983332329651956793203506365849234986541959826176'
    keySize = 1024
    privatekey = (14118956157108293655346808051133433894091646039538312006923399735362493605263203702497585893776717003286326229134304078204210728995962809448233282087726441833718356477474042405336332872075207334696535304102256981804931805888502587515310873257966538377740407422137907772437613376342940374815839154897315760145075243071401233858428232725214391295151698044147558454184807105787419519119343953276836694146614061330872356766933442169358208953710231872729486994792595105820069351163066330362191163434473421951082966346860965671789280887020440983279967498480147232734401682910892741619433374703999689201536556462802829353073,11083860415619346217501756416108446561582850063996889253200092504567502454590102760251905124119845017135971531244946565683019075865514194565283104164535955298525268616842757019644543676770338343183807963953089052579945015821831735686799963158706566209899631471964300172458962461680078712228111397257448581773764834596346920472285714846437574719100461961509309987096746113304927613933694082945502819852319160906338075210456720761342829635335720025532952837826463434962060694459648215570764261259584541116274831233824241240677709312093816031211771171472865350211215775349228203234134790691853112008681770623256330333069)

    decryptedText = decryption(keySize, privatekey, ciphertext)
    print('Decrypted Text: ')
    print(decryptedText)

def getTextFromBlocks(blockInts, messageLength, blockSize):
    message = []
    for blockInt in blockInts:
        blockMessage = []
        for i in range(blockSize -1, -1, -1):
            if len(message) + i < messageLength:
                charIndex = blockInt // (len(SYMBOLS) ** i)
                blockInt = blockInt % (len(SYMBOLS) ** i)
                blockMessage.insert(0, SYMBOLS[charIndex])
        message.extend(blockMessage)
    return ''.join(message)

def decryptMessage(encryptedBlocks, messageLength, privatekey, blockSize):
    decryptedBlocks = []
    n, d = privatekey
    for block in encryptedBlocks:
        decryptedBlocks.append(pow(block, d, n))
    return getTextFromBlocks(decryptedBlocks, messageLength, blockSize)

def decryption(keySize, privatekey, ciphertext):
    n, d = privatekey
    messageLength, blockSize, encryptedMessage = ciphertext.split('_')
    messageLength = int(messageLength)
    blockSize = int(blockSize)

    encryptedBlocks = []
    for block in encryptedMessage.split(','):
        encryptedBlocks.append(int(block))

    return decryptMessage(encryptedBlocks, messageLength, (n, d), blockSize)

if __name__ == '__main__':
    main()
